apply plugin: 'com.android.application'
def getApiKey() {
    def props = new Properties()
    file("mapquest.properties").withInputStream { props.load(it) }
    return "\"" + props.getProperty("api_key") + "\""
}

android {
    compileSdkVersion 29
    buildToolsVersion "29.0.3"

    defaultConfig {
        applicationId "com.example.appopenstreetmap"
        minSdkVersion 16
        targetSdkVersion 29
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }


    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }

        applicationVariants.all { variant ->
            variant.buildConfigField "String", "API_KEY", getApiKey() // Provides key for the Navigation SDK
            variant.resValue "string", "API_KEY", getApiKey()         // Provides key for the MapView used in app layouts
        }

        compileOptions {
            sourceCompatibility JavaVersion.VERSION_1_8
            targetCompatibility JavaVersion.VERSION_1_8
        }

    }

    dependencies {
        implementation fileTree(dir: 'libs', include: ['*.jar'])
        //Etapa0: on récupère la version d'osmdroid qui est un API permettant d'acceder
        //chaque fois que l'on souhaite travailler avec une application tierce(non Android)
        //ex: OSM, FireBase, etc..
        implementation 'org.osmdroid:osmdroid-android:6.1.6'
        implementation 'androidx.appcompat:appcompat:1.1.0'
        implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
        //etape 6
        implementation 'com.github.MKergall:osmbonuspack:6.5.2'
        //fin etape 6
        testImplementation 'junit:junit:4.12'
        androidTestImplementation 'androidx.test.ext:junit:1.1.1'
        androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'
        implementation('com.mapquest:mapping-android-sdk:2.0.10')   // for Mapping SDK MapView
    }
}